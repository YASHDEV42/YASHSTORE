// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init



generator client {
  provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url = env("POSTGRES_PRISMA_URL") // uses connection pooling
    directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

enum Role {
  ADMIN
  USER
}
enum Status {
  PENDING
  PROCESSING
  DELIVERING
  SHIPPED
  COMPLETED
  CANCELLED
  REFUNDED
}

model User {
  id            String    @id @default(uuid())
  email         String    @unique
  name          String
  phone_number  BigInt       @unique
  password      String?
  created_at    DateTime  @default(now())
  role          Role      @default(USER)
  carts         Cart[]
  wishlists    Wishlist[]
  orders        Order[]
  reviews       Review[]
}

model Cart{
  id            String    @id @default(uuid())
  user          User      @relation(fields: [user_id], references: [id])
  user_id       String
  created_at    DateTime    @default(now())
  product_id    String
  product       Product   @relation(fields: [product_id], references: [id])
}
model Product{
  id            String      @id @default(uuid())
  image_url     String[]
  name          String
  price         Int
  description   String
  created_at    DateTime    @default(now())
  category      Category    @relation(fields: [category_id], references: [id])   
  category_id   String
  carts         Cart[]
  wishlists     Wishlist[]
  reviews       Review[]
  orders        Order[] 
}

model Category{
  id            String    @id @default(uuid())
  name          String
  created_at    DateTime    @default(now())
  products      Product[]
}

model Wishlist{
  id            String    @id @default(uuid())
  user          User      @relation(fields: [user_id], references: [id])
  user_id       String
  created_at    DateTime    @default(now())
  products      Product[]
}
model Order{
  id            String    @id @default(uuid())
  created_at    DateTime    @default(now())
  address       String
  user          User      @relation(fields: [user_id], references: [id])
  user_id       String
  total_price   Float
  status        Status    @default(PENDING)
  products      Product[] 
  payment_id    String
}


model Review{
  id            String    @id @default(uuid())
  created_at    DateTime    @default(now())
  rating        Int
  comment       String
  user          User      @relation(fields: [user_id], references: [id]) 
  user_id       String
  product       Product   @relation(fields: [product_id], references: [id])
  product_id    String
}